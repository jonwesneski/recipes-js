// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(cuid())
  name      String?
  email     String?        @unique
  password  String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  recipes   Recipe[]
  favorites UserFavorite[]

  followers  UserFollow[] @relation("UserFollows")
  followings UserFollow[] @relation("UserFollowings")

  @@map("users")
}

model UserFavorite {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])

  @@map("user_favorites")
}

model UserFollow {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation("UserFollows", fields: [userId], references: [id])
  followingId String
  following   User     @relation("UserFollowings", fields: [followingId], references: [id])

  @@map("user_follows")
}

model Recipe {
  id                       Int               @id @default(autoincrement())
  name                     String
  slug                     String            @unique
  description              String?
  preparationTimeInMinutes Int?
  cookingTimeInMinutes     Int?
  createdAt                DateTime          @default(now())
  updatedAt                DateTime          @updatedAt
  steps                    Step[]
  equipments               Equipment[]
  nutritionalFacts         NutritionalFacts?
  userId                   String
  user                     User              @relation(fields: [userId], references: [id])
  tags                     Tag[]
  userFavorites            UserFavorite[]

  @@map("recipes")
}

model NutritionalFacts {
  id               String   @id @default(cuid())
  caloriesInKcal   Int?
  totalFatInG      Int?
  saturatedFatInG  Int?
  transFatInG      Int?
  cholesterolInMg  Int?
  sodiumInMg       Int?
  carbohydratesInG Int?
  fiberInG         Int?
  sugarInG         Int?
  proteinInG       Int?
  vitaminAInIU     Int?
  vitaminCInMg     Int?
  vitaminDInIU     Int?
  vitaminB6InMg    Int?
  vitaminB12InMg   Int?
  calciumInMg      Int?
  ironInMg         Int?
  magnesiumInMg    Int?
  potassiumInMg    Int?
  folateInMcg      Int?
  thiaminInMg      Int?
  riboflavinInMg   Int?
  niacinInMg       Int?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  recipeId         Int      @unique
  recipe           Recipe   @relation(fields: [recipeId], references: [id])

  @@map("nutritional_facts")
}

model Step {
  id          String       @id @default(cuid())
  ingredients Ingredient[]
  instruction String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  recipeId    Int
  recipe      Recipe       @relation(fields: [recipeId], references: [id])

  @@map("steps")
}

model Equipment {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])

  @@map("equipments")
}

model Ingredient {
  id        String   @id @default(cuid())
  amount    Float
  unit      String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stepId    String
  step      Step     @relation(fields: [stepId], references: [id])

  @@map("ingredients")
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  recipes   Recipe[]

  @@map("tags")
}
